Pandas

pandas is a Python library for data analysis. 
It offers a number of data exploration, cleaning and transformation operations that are critical in working with data in Python.
pandas build upon numpy and scipy providing easy-to-use data structures and data manipulation functions with integrated indexing.
The main data structures pandas provides are Series and DataFrames. 
After a brief introduction to these two data structures and data ingestion, the key features of pandas this notebook covers are:

Generating descriptive statistics on data
Data cleaning using built in pandas functions
Frequent data operations for subsetting, filtering, insertion, deletion and aggregation of data
Merging multiple datasets using dataframes
Working with timestamps and time-series data
Additional Recommended Resources:

pandas Documentation: http://pandas.pydata.org/pandas-docs/stable/
Python for Data Analysis by Wes McKinney
Python Data Science Handbook by Jake VanderPlas
Let's get started with our first pandas notebook!

############################################################################################################

Import Libraries

import pandas as pd



Introduction to pandas Data Structures:
*pandas* has two main data structures it uses, namely, *Series* and *DataFrames*.

~ pandas Series is one-dimensional labeled array.

ser = pd.Series(data=[100, 200, 300, 400, 500], index=['tom', 'bob', 'nancy', 'dan', 'eric'])
ser
OUT: tom      100
     bob      200
     nancy    300
     dan      400
     eric     500
     dtype: int64


# We can do the same as above without labeling the data and index:
ser = pd.Series([100, 200, 300, 400, 500], ['tom', 'bob', 'nancy', 'dan', 'eric'])
ser.index
OUT: Index(['tom', 'bob', 'nancy', 'dan', 'eric'], dtype='object')


ser[['nancy','bob']] # To access multiple data 
OUT: nancy    300
     bob      200
     dtype: int64


ser['nancy']
OUT: 300


ser.loc['nancy'] # Requesting value at the location indexed as "nancy"
OUT: 300


ser.iloc[2]
OUT: 300




